{"version":3,"sources":["../src/rooms.js"],"names":["init","bigbluebuttonbnid","completionElement","document","querySelector","addEventListener","repository","completionValidate","catch","displayException","e","actionButton","target","closest","dataset","action","roomUpdater","poll","eventTypes","sessionEnded","stop","updateRoom","setupWindowAutoClose","window","onunload","opener","setTimeout","close"],"mappings":"shBAgBA,OACA,O,6iBAOoB,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAuB,CACvC,GAAMC,CAAAA,CAAiB,CAAGC,QAAQ,CAACC,aAAT,CAAuB,8BAAvB,CAA1B,CACA,GAAIF,CAAJ,CAAuB,CACnBA,CAAiB,CAACG,gBAAlB,CAAmC,OAAnC,CAA4C,UAAM,CAC9CC,CAAU,CAACC,kBAAX,CAA8BN,CAA9B,EAAiDO,KAAjD,CAAuDC,WAAvD,CACH,CAFD,CAGH,CAEDN,QAAQ,CAACE,gBAAT,CAA0B,OAA1B,CAAmC,SAAAK,CAAC,CAAI,CACpC,GAAMC,CAAAA,CAAY,CAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,iBAAjB,CAArB,CACA,GAAI,CAACF,CAAL,CAAmB,CACf,MACH,CAED,GAAoC,MAAhC,GAAAA,CAAY,CAACG,OAAb,CAAqBC,MAAzB,CAA4C,CACxCC,CAAW,CAACC,IAAZ,EAEH,CACJ,CAVD,EAYAd,QAAQ,CAACE,gBAAT,CAA0Ba,aAAWC,YAArC,CAAmD,UAAM,CACrDH,CAAW,CAACI,IAAZ,GACAJ,CAAW,CAACK,UAAZ,GACA,0BACH,CAJD,CAKH,C,wBAMmC,QAAvBC,CAAAA,oBAAuB,EAAM,CAEtCC,MAAM,CAACC,QAAP,CAAkB,UAAW,CACzBC,MAAM,CAACC,UAAP,CAAkB,UAAW,CACzBV,CAAW,CAACK,UAAZ,EACH,CAFD,CAEG,GAFH,EAGAE,MAAM,CAACI,KAAP,EACH,CALD,CAMAJ,MAAM,CAACI,KAAP,EACH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport './actions';\nimport * as repository from './repository';\nimport * as roomUpdater from './roomupdater';\nimport {\n    exception as displayException,\n    fetchNotifications,\n} from 'core/notification';\nimport {eventTypes} from './events';\n\nexport const init = (bigbluebuttonbnid) => {\n    const completionElement = document.querySelector('a[href*=completion_validate]');\n    if (completionElement) {\n        completionElement.addEventListener(\"click\", () => {\n            repository.completionValidate(bigbluebuttonbnid).catch(displayException);\n        });\n    }\n\n    document.addEventListener('click', e => {\n        const actionButton = e.target.closest('.bbb-btn-action');\n        if (!actionButton) {\n            return;\n        }\n\n        if (actionButton.dataset.action === \"join\") {\n            roomUpdater.poll();\n            return;\n        }\n    });\n\n    document.addEventListener(eventTypes.sessionEnded, () => {\n        roomUpdater.stop();\n        roomUpdater.updateRoom();\n        fetchNotifications();\n    });\n};\n\n/**\n * Auto close window ?\n * TODO Remove??\n */\nexport const setupWindowAutoClose = () => {\n    // Not sure what this does here. Will need to have a closer look into the process.\n    window.onunload = function() {\n        opener.setTimeout(function() {\n            roomUpdater.updateRoom();\n        }, 5000);\n        window.close();\n    };\n    window.close();\n};\n"],"file":"rooms.min.js"}