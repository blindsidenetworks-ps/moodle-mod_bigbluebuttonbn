{"version":3,"sources":["../src/rooms.js"],"names":["init","bigbluebuttonbnid","completionElement","document","querySelector","addEventListener","repository","completionValidate","catch","displayException","initActions","actionButtons","querySelectorAll","forEach","bt","e","element","target","id","bbbid","dataset","bbbId","cmid","cmId","joinURL","URL","Config","wwwroot","searchParams","append","join","toString","meetingId","endMeeting","then","updateRoom","autoUpdateRoom","setupWindowAutoClose","window","onunload","opener","setTimeout","close","updatecache","bbbRoomViewElement","getElementById","meetingid","meetingInfo","data","Templates","renderForPromise","templatedata","replaceNodeContents","html","js","joinUrl","open","stop","timeoutint","updatecount","currentfactor","clearInterval","setInterval"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as repository from './repository';\nimport {exception as displayException} from 'core/notification';\nimport Config from 'core/config';\nimport Templates from \"core/templates\";\n\n\nexport const init = (bigbluebuttonbnid) => {\n    const completionElement = document.querySelector('a[href*=completion_validate]');\n    if (completionElement) {\n        completionElement.addEventListener(\"click\", function () {\n            repository.completionValidate(bigbluebuttonbnid).catch(displayException);\n        });\n    }\n};\n/**\n * Init action button\n */\nexport const initActions = () => {\n    const actionButtons = document.querySelectorAll('.bbb-btn-action');\n    actionButtons.forEach(\n        (bt) => {\n            bt.addEventListener('click', (e) => {\n                const element = e.target;\n                const id = element.id;\n                const bbbid = element.dataset.bbbId;\n                if (id === 'join_button_input') {\n                    const cmid = element.dataset.cmId;\n                    let joinURL = new URL(Config.wwwroot + '/mod/bigbluebuttonbn/bbb_view.php');\n                    joinURL.searchParams.append('action', 'join');\n                    joinURL.searchParams.append('id', cmid);\n                    joinURL.searchParams.append('bn', bbbid);\n                    join(joinURL.toString());\n                }\n                if (id === 'end_button_input') {\n                    const meetingId = element.dataset.meetingId;\n                    repository.endMeeting({\n                        'bigbluebuttonbnid': bbbid,\n                        'meetingid': meetingId\n                    }).then(\n                        () => {\n                            updateRoom();\n                            autoUpdateRoom(true); // Stop autoupdating.\n                        }\n                    ).catch(displayException);\n                }\n            });\n        }\n    );\n};\n\n/**\n * Auto close window ?\n */\nexport const setupWindowAutoClose = () => {\n    // Not sure what this does here. Will need to have a closer look into the process.\n    window.onunload = function () {\n        opener.setTimeout(function () {\n            updateRoom();\n        }, 5000);\n        window.close();\n    };\n    window.close();\n};\n\n/**\n * Update room display.\n */\nconst updateRoom = (updatecache) => {\n    const bbbRoomViewElement = document.getElementById('bbb-room-view');\n    const bbbid = bbbRoomViewElement.dataset.bbbId;\n    const meetingid = bbbRoomViewElement.dataset.meetingId;\n    updatecache = (typeof updatecache === 'undefined') ? false : updatecache;\n    // Meeting ID ?\n    return repository.meetingInfo({\n        bigbluebuttonbnid: bbbid,\n        meetingid: meetingid,\n        updatecache: updatecache\n    }).then(\n        (data) => {\n            Templates.renderForPromise('mod_bigbluebuttonbn/room_view', data).then(\n                (templatedata) => {\n                    Templates.replaceNodeContents(bbbRoomViewElement, templatedata.html, templatedata.js);\n                }\n            ).catch(displayException);\n            return data;\n        }).catch(displayException);\n};\n\n/**\n * Join a BBB conference in a new window.\n * @param joinUrl\n */\nconst join = (joinUrl) => {\n    autoUpdateRoom();\n    window.open(joinUrl);\n};\n\nconst CHECK_BBB_TIMEOUT = 1000;\nconst EXTEND_MAX_FACTOR = 10; // Extend timeout max factor.\n/**\n * Function to start autoupdating and stop it if needed.\n *\n * @param stop\n */\nfunction autoUpdateRoom(stop) {\n    if (typeof autoUpdateRoom.timeoutint == 'undefined') {\n        // It has not... perform the initialization\n        autoUpdateRoom.timeoutint = 0;\n    }\n    if (typeof autoUpdateRoom.updatecount == 'undefined') {\n        // It has not... perform the initialization\n        autoUpdateRoom.updatecount = 0;\n    }\n    if (typeof autoUpdateRoom.currentfactor == 'undefined') {\n        // It has not... perform the initialization\n        autoUpdateRoom.currentfactor = 1;\n    }\n    if (stop) {\n        if (autoUpdateRoom.timeoutint) {\n            clearInterval(autoUpdateRoom.timeoutint);\n            autoUpdateRoom.timeoutint = 0;\n            autoUpdateRoom.updatecount = 0;\n            autoUpdateRoom.currentfactor = 1;\n        }\n    } else {\n        autoUpdateRoom.timeoutint = setInterval(function () {\n            if ( (autoUpdateRoom.updatecount % autoUpdateRoom.currentfactor) === 0) {\n                updateRoom(true);\n                if (autoUpdateRoom.currentfactor >= EXTEND_MAX_FACTOR) {\n                    autoUpdateRoom.currentfactor = 1;\n                } else {\n                    autoUpdateRoom.currentfactor++;\n                }\n            }\n            autoUpdateRoom.updatecount++;\n        }, CHECK_BBB_TIMEOUT);\n    }\n}"],"file":"rooms.min.js"}