{"version":3,"sources":["../src/rooms.js"],"names":["init","bigbluebuttonbnid","completionElement","document","querySelector","addEventListener","repository","completionValidate","catch","displayException","e","joinButton","target","closest","roomUpdater","start","window","open","href","preventDefault","eventTypes","sessionEnded","stop","updateRoom","currentSessionEnded","autoclose","opener","setTimeout","removeEventListener","setupWindowAutoClose","close"],"mappings":"shBAwBA,OACA,O,6iBAQoB,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAuB,CACvC,GAAMC,CAAAA,CAAiB,CAAGC,QAAQ,CAACC,aAAT,CAAuB,8BAAvB,CAA1B,CACA,GAAIF,CAAJ,CAAuB,CACnBA,CAAiB,CAACG,gBAAlB,CAAmC,OAAnC,CAA4C,UAAM,CAC9CC,CAAU,CAACC,kBAAX,CAA8BN,CAA9B,EAAiDO,KAAjD,CAAuDC,WAAvD,CACH,CAFD,CAGH,CAEDN,QAAQ,CAACE,gBAAT,CAA0B,OAA1B,CAAmC,SAAAK,CAAC,CAAI,CACpC,GAAMC,CAAAA,CAAU,CAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,wBAAjB,CAAnB,CACA,GAAIF,CAAJ,CAAgB,CACZG,CAAW,CAACC,KAAZ,GACAC,MAAM,CAACC,IAAP,CAAYN,CAAU,CAACO,IAAvB,CAA6B,0BAA7B,EAEAR,CAAC,CAACS,cAAF,EACH,CACJ,CARD,EAUAhB,QAAQ,CAACE,gBAAT,CAA0Be,aAAWC,YAArC,CAAmD,UAAM,CACrDP,CAAW,CAACQ,IAAZ,GACAR,CAAW,CAACS,UAAZ,GACA,0BACH,CAJD,EAMAP,MAAM,CAACX,gBAAP,CAAwBe,aAAWI,mBAAnC,CAAwD,UAAM,CAC1DV,CAAW,CAACQ,IAAZ,GACAR,CAAW,CAACS,UAAZ,GACA,0BACH,CAJD,CAKH,C,IAKKE,CAAAA,CAAS,CAAG,UAAM,CACpBT,MAAM,CAACU,MAAP,CAAcC,UAAd,CAAyB,UAAM,CAC3Bb,CAAW,CAACS,UAAZ,IACH,CAFD,CAEG,GAFH,EAGAP,MAAM,CAACY,mBAAP,CAA2B,gBAA3B,CAA6CH,CAA7C,CACH,C,wBAKmC,QAAvBI,CAAAA,oBAAuB,EAAM,CACtC,gCAA0Bb,MAAM,CAACU,MAAjC,EACAV,MAAM,CAACX,gBAAP,CAAwB,gBAAxB,CAA0CoB,CAA1C,EAEAT,MAAM,CAACc,KAAP,EACH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS actions for the rooms page for mod_bigbluebuttonbn.\n *\n * @module      mod_bigbluebuttonbn/rooms\n * @copyright   2021 Blindside Networks Inc\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport './actions';\nimport * as repository from './repository';\nimport * as roomUpdater from './roomupdater';\nimport {\n    exception as displayException,\n    fetchNotifications,\n} from 'core/notification';\n\nimport {eventTypes, notifyCurrentSessionEnded} from './events';\n\nexport const init = (bigbluebuttonbnid) => {\n    const completionElement = document.querySelector('a[href*=completion_validate]');\n    if (completionElement) {\n        completionElement.addEventListener(\"click\", () => {\n            repository.completionValidate(bigbluebuttonbnid).catch(displayException);\n        });\n    }\n\n    document.addEventListener('click', e => {\n        const joinButton = e.target.closest('[data-action=\"join\"]');\n        if (joinButton) {\n            roomUpdater.start();\n            window.open(joinButton.href, 'bigbluebutton_conference');\n\n            e.preventDefault();\n        }\n    });\n\n    document.addEventListener(eventTypes.sessionEnded, () => {\n        roomUpdater.stop();\n        roomUpdater.updateRoom();\n        fetchNotifications();\n    });\n\n    window.addEventListener(eventTypes.currentSessionEnded, () => {\n        roomUpdater.stop();\n        roomUpdater.updateRoom();\n        fetchNotifications();\n    });\n};\n\n/**\n * Handle autoclosing of the window.\n */\nconst autoclose = () => {\n    window.opener.setTimeout(() => {\n        roomUpdater.updateRoom(true);\n    }, 5000);\n    window.removeEventListener('onbeforeunload', autoclose);\n};\n\n/**\n * Auto close child windows when clicking the End meeting button.\n */\nexport const setupWindowAutoClose = () => {\n    notifyCurrentSessionEnded(window.opener);\n    window.addEventListener('onbeforeunload', autoclose);\n\n    window.close(); // This does not work as scripts can only close windows that are opened by themselves.\n};\n"],"file":"rooms.min.js"}