{"version":3,"sources":["../src/rooms.js"],"names":["init","bigbluebuttonbnid","completionElement","document","querySelector","addEventListener","repository","completionValidate","catch","displayException","getCurrentGroupId","actionButton","groupSelector","value","dataset","groupId","joinConference","joinUrl","roomUpdater","poll","window","open","initActions","actionButtonRegion","getElementById","e","target","closest","bbbId","action","preventDefault","joinURL","URL","Config","wwwroot","searchParams","append","cmId","toString","eventTypes","sessionEnded","stop","updateRoom","setupWindowAutoClose","onunload","opener","setTimeout","close"],"mappings":"ojBAgBA,OACA,OACA,uD,6iBAOoB,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAuB,CACvC,GAAMC,CAAAA,CAAiB,CAAGC,QAAQ,CAACC,aAAT,CAAuB,8BAAvB,CAA1B,CACA,GAAIF,CAAJ,CAAuB,CACnBA,CAAiB,CAACG,gBAAlB,CAAmC,OAAnC,CAA4C,UAAM,CAC9CC,CAAU,CAACC,kBAAX,CAA8BN,CAA9B,EAAiDO,KAAjD,CAAuDC,WAAvD,CACH,CAFD,CAGH,CACJ,C,IASKC,CAAAA,CAAiB,CAAG,SAAAC,CAAY,CAAI,CACtC,GAAMC,CAAAA,CAAa,CAAGT,QAAQ,CAACC,aAAT,CAAuB,uCAAvB,CAAtB,CACA,GAAIQ,CAAJ,CAAmB,CACf,MAAOA,CAAAA,CAAa,CAACC,KACxB,CAED,MAAOF,CAAAA,CAAY,CAACG,OAAb,CAAqBC,OAC/B,C,CAQKC,CAAc,CAAG,SAAAC,CAAO,CAAI,CAC9BC,CAAW,CAACC,IAAZ,GACAC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CACH,C,eAK0B,QAAdK,CAAAA,WAAc,EAAM,CAC7B,GAAMC,CAAAA,CAAkB,CAAGpB,QAAQ,CAACqB,cAAT,CAAwB,0BAAxB,CAA3B,CAEAD,CAAkB,CAAClB,gBAAnB,CAAoC,OAApC,CAA6C,SAAAoB,CAAC,CAAI,CAC9C,GAAMd,CAAAA,CAAY,CAAGc,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB,iBAAjB,CAArB,CACA,GAAI,CAAChB,CAAL,CAAmB,CACf,MACH,CAED,GAAMiB,CAAAA,CAAK,CAAGjB,CAAY,CAACG,OAAb,CAAqBc,KAAnC,CAEA,GAAoC,MAAhC,GAAAjB,CAAY,CAACG,OAAb,CAAqBe,MAAzB,CAA4C,CACxCJ,CAAC,CAACK,cAAF,GAGA,GAAMC,CAAAA,CAAO,CAAG,GAAIC,CAAAA,GAAJ,WAAWC,UAAOC,OAAlB,sCAAhB,CAEAH,CAAO,CAACI,YAAR,CAAqBC,MAArB,CAA4B,QAA5B,CAAsC,MAAtC,EACAL,CAAO,CAACI,YAAR,CAAqBC,MAArB,CAA4B,IAA5B,CAAkCzB,CAAY,CAACG,OAAb,CAAqBuB,IAAvD,EACAN,CAAO,CAACI,YAAR,CAAqBC,MAArB,CAA4B,IAA5B,CAAkCR,CAAlC,EACAG,CAAO,CAACI,YAAR,CAAqBC,MAArB,CAA4B,OAA5B,CAAqC1B,CAAiB,CAACC,CAAD,CAAtD,EAEAK,CAAc,CAACe,CAAO,CAACO,QAAR,EAAD,CAGjB,CACJ,CAvBD,EAyBAnC,QAAQ,CAACE,gBAAT,CAA0BkC,aAAWC,YAArC,CAAmD,UAAM,CACrDtB,CAAW,CAACuB,IAAZ,GACAvB,CAAW,CAACwB,UAAZ,GACA,0BACH,CAJD,CAKH,C,wBAMmC,QAAvBC,CAAAA,oBAAuB,EAAM,CAEtCvB,MAAM,CAACwB,QAAP,CAAkB,UAAW,CACzBC,MAAM,CAACC,UAAP,CAAkB,UAAW,CACzB5B,CAAW,CAACwB,UAAZ,EACH,CAFD,CAEG,GAFH,EAGAtB,MAAM,CAAC2B,KAAP,EACH,CALD,CAMA3B,MAAM,CAAC2B,KAAP,EACH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport './actions';\nimport * as repository from './repository';\nimport * as roomUpdater from './roomupdater';\nimport Config from 'core/config';\nimport {\n    exception as displayException,\n    fetchNotifications,\n} from 'core/notification';\nimport {eventTypes} from './events';\n\nexport const init = (bigbluebuttonbnid) => {\n    const completionElement = document.querySelector('a[href*=completion_validate]');\n    if (completionElement) {\n        completionElement.addEventListener(\"click\", () => {\n            repository.completionValidate(bigbluebuttonbnid).catch(displayException);\n        });\n    }\n};\n\n/**\n * Get the id of the current group.\n *\n * @param {HTMLElement} actionButton\n * @returns {number}\n * @private\n */\nconst getCurrentGroupId = actionButton => {\n    const groupSelector = document.querySelector('.groupselector select[name=\"group\"]');\n    if (groupSelector) {\n        return groupSelector.value;\n    }\n\n    return actionButton.dataset.groupId;\n};\n\n/**\n * Join a BBB conference in a new window.\n *\n * @param {string} joinUrl\n * @private\n */\nconst joinConference = joinUrl => {\n    roomUpdater.poll();\n    window.open(joinUrl);\n};\n\n/**\n * Init action button\n */\nexport const initActions = () => {\n    const actionButtonRegion = document.getElementById('room_view_action_buttons');\n\n    actionButtonRegion.addEventListener('click', e => {\n        const actionButton = e.target.closest('.bbb-btn-action');\n        if (!actionButton) {\n            return;\n        }\n\n        const bbbId = actionButton.dataset.bbbId;\n\n        if (actionButton.dataset.action === \"join\") {\n            e.preventDefault();\n\n            // TODO: This should be a link on the button itself.\n            const joinURL = new URL(`${Config.wwwroot}/mod/bigbluebuttonbn/bbb_view.php`);\n\n            joinURL.searchParams.append('action', 'join');\n            joinURL.searchParams.append('id', actionButton.dataset.cmId);\n            joinURL.searchParams.append('bn', bbbId);\n            joinURL.searchParams.append('group', getCurrentGroupId(actionButton));\n\n            joinConference(joinURL.toString());\n\n            return;\n        }\n    });\n\n    document.addEventListener(eventTypes.sessionEnded, () => {\n        roomUpdater.stop();\n        roomUpdater.updateRoom();\n        fetchNotifications();\n    });\n};\n\n/**\n * Auto close window ?\n * TODO Remove??\n */\nexport const setupWindowAutoClose = () => {\n    // Not sure what this does here. Will need to have a closer look into the process.\n    window.onunload = function() {\n        opener.setTimeout(function() {\n            roomUpdater.updateRoom();\n        }, 5000);\n        window.close();\n    };\n    window.close();\n};\n"],"file":"rooms.min.js"}