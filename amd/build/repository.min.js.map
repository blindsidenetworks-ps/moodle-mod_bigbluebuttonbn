{"version":3,"sources":["../src/repository.js"],"names":["fetchRecordings","bigbluebuttonbnid","tools","groupid","args","methodname","fetchRecordingsToImport","destinationinstanceid","sourcebigbluebuttonbnid","sourcecourseid","updateRecording","endMeeting","completionValidate","getMeetingInfo","updatecache"],"mappings":"uRAiC+B,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAoBC,CAApB,CAA2BC,CAA3B,CAAuC,CAClE,GAAMC,CAAAA,CAAI,CAAG,CACTH,iBAAiB,CAAjBA,CADS,CAETC,KAAK,CAALA,CAFS,CAAb,CAKA,GAAIC,CAAJ,CAAa,CACTC,CAAI,CAACD,OAAL,CAAeA,CAClB,CAED,MAAO,WAAU,CAAC,CAACE,UAAU,CAAE,oCAAb,CAAmDD,IAAI,CAAJA,CAAnD,CAAD,CAAV,EAAsE,CAAtE,CACV,C,2BAYsC,QAA1BE,CAAAA,uBAA0B,CACnCC,CADmC,CAEnCC,CAFmC,CAGnCC,CAHmC,CAInCP,CAJmC,CAKnCC,CALmC,CAMlC,CACD,GAAMC,CAAAA,CAAI,CAAG,CACTG,qBAAqB,CAArBA,CADS,CAETC,uBAAuB,CAAvBA,CAFS,CAGTC,cAAc,CAAdA,CAHS,CAITP,KAAK,CAALA,CAJS,CAAb,CAOA,GAAIC,CAAJ,CAAa,CACTC,CAAI,CAACD,OAAL,CAAeA,CAClB,CAED,MAAO,WAAU,CAAC,CAACE,UAAU,CAAE,8CAAb,CAA6DD,IAAI,CAAJA,CAA7D,CAAD,CAAV,EAAgF,CAAhF,CACV,C,mBAQ8B,QAAlBM,CAAAA,eAAkB,CAAAN,CAAI,QAAI,WAAU,CAC7C,CACIC,UAAU,CAAE,sCADhB,CAEID,IAAI,CAAJA,CAFJ,CAD6C,CAAV,EAKpC,CALoC,CAAJ,C,cAcT,QAAbO,CAAAA,UAAa,CAACV,CAAD,CAAoBE,CAApB,QAAgC,WAAU,CAChE,CACIE,UAAU,CAAE,iCADhB,CAEID,IAAI,CAAE,CACFH,iBAAiB,CAAjBA,CADE,CAEFE,OAAO,CAAPA,CAFE,CAFV,CADgE,CAAV,EAQvD,CARuD,CAAhC,C,sBAgBQ,QAArBS,CAAAA,kBAAqB,CAAAR,CAAI,QAAI,WAAU,CAChD,CACIC,UAAU,CAAE,yCADhB,CAEID,IAAI,CAAJA,CAFJ,CADgD,CAAV,EAKvC,CALuC,CAAJ,C,kBAgBR,QAAjBS,CAAAA,cAAiB,CAACZ,CAAD,CAAoBE,CAApB,KAA6BW,CAAAA,CAA7B,iEAAqD,WAAU,CACzF,CACIT,UAAU,CAAE,kCADhB,CAEID,IAAI,CAAE,CACFH,iBAAiB,CAAjBA,CADE,CAEFE,OAAO,CAAPA,CAFE,CAGFW,WAAW,CAAXA,CAHE,CAFV,CADyF,CAAV,EAShF,CATgF,CAArD,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Repository to perform WS calls for mod_bigbluebuttonbn.\n *\n * @module      mod_bigbluebuttonbn/repository\n * @copyright   2021 Blindside Networks Inc\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call as fetchMany} from 'core/ajax';\n\n/**\n * Fetch the list of recordings from the server.\n *\n * @param   {Number} bigbluebuttonbnid The instance ID\n * @param   {String} tools the set of tools to display\n * @param   {number} groupid\n * @returns {Promise}\n */\nexport const fetchRecordings = (bigbluebuttonbnid, tools, groupid) => {\n    const args = {\n        bigbluebuttonbnid,\n        tools,\n    };\n\n    if (groupid) {\n        args.groupid = groupid;\n    }\n\n    return fetchMany([{methodname: 'mod_bigbluebuttonbn_get_recordings', args}])[0];\n};\n\n/**\n * Fetch the list of recordings from the server that can be imported.\n *\n * @param   {Number} destinationinstanceid The destination instance ID\n * @param   {Number} sourcebigbluebuttonbnid The original instance ID\n * @param   {Number} sourcecourseid The destination instance ID\n * @param   {String} tools the set of tools to display\n * @param   {number} groupid\n * @returns {Promise}\n */\nexport const fetchRecordingsToImport = (\n    destinationinstanceid,\n    sourcebigbluebuttonbnid,\n    sourcecourseid,\n    tools,\n    groupid\n) => {\n    const args = {\n        destinationinstanceid,\n        sourcebigbluebuttonbnid,\n        sourcecourseid,\n        tools,\n    };\n\n    if (groupid) {\n        args.groupid = groupid;\n    }\n\n    return fetchMany([{methodname: 'mod_bigbluebuttonbn_get_recordings_to_import', args}])[0];\n};\n\n/**\n * Perform an update on a single recording.\n *\n * @param   {object} args The instance ID\n * @returns {Promise}\n */\nexport const updateRecording = args => fetchMany([\n    {\n        methodname: 'mod_bigbluebuttonbn_update_recording',\n        args,\n    }\n])[0];\n\n/**\n * End the Meeting\n *\n * @param {number} bigbluebuttonbnid\n * @param {number} groupid\n * @returns {Promise}\n */\nexport const endMeeting = (bigbluebuttonbnid, groupid) => fetchMany([\n    {\n        methodname: 'mod_bigbluebuttonbn_end_meeting',\n        args: {\n            bigbluebuttonbnid,\n            groupid\n        },\n    }\n])[0];\n\n/**\n * Validate completion.\n *\n * @param {object} args\n * @returns {Promise}\n */\nexport const completionValidate = args => fetchMany([\n    {\n        methodname: 'mod_bigbluebuttonbn_completion_validate',\n        args,\n    }\n])[0];\n\n\n/**\n * Fetch meeting info for the specified meeting.\n *\n * @param {number} bigbluebuttonbnid\n * @param {number} groupid\n * @param {boolean} [updatecache=false]\n * @returns {Promise}\n */\nexport const getMeetingInfo = (bigbluebuttonbnid, groupid, updatecache = false) => fetchMany([\n    {\n        methodname: 'mod_bigbluebuttonbn_meeting_info',\n        args: {\n            bigbluebuttonbnid,\n            groupid,\n            updatecache,\n        },\n    }\n])[0];\n"],"file":"repository.min.js"}