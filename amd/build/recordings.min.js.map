{"version":3,"sources":["../src/recordings.js"],"names":["stringList","getStringsForYui","stringMap","map","key","component","then","first","prev","next","last","goToLabel","goToAction","perPage","showAll","catch","getYuiInstance","lang","Promise","resolve","YUI","use","Y","formatDates","locale","dateList","row","date","Date","toLocaleDateString","weekday","year","month","day","getFormattedData","response","recordingData","tabledata","rowData","JSON","parse","data","getTableNode","tableSelector","document","querySelector","fetchRecordingData","tableNode","repository","fetchRecordings","dataset","bbbid","groupId","removeImportedId","tools","getDataTableFunctions","tableId","searchFormId","dataTable","updateTableFromResponse","status","get","reset","set","currentFilter","filterByText","refreshTableData","value","dataModel","escapedRegex","replace","rsearch","RegExp","filter","asList","item","name","test","description","requestAction","element","getDataFromAction","dataType","dataElement","closest","elementData","payload","bigbluebuttonbnid","recordingid","additionaloptions","action","requireConfirmation","ModalFactory","create","title","Str","get_string","body","recordingConfirmationMessage","type","types","SAVE_CANCEL","modal","setSaveButtonText","getRoot","on","ModalEvents","save","hidden","destroy","show","Notification","exception","proceed","updateRecording","playbackElement","imported","recordingType","confirmation","associatedLinkCount","links","confirmationWarning","processAction","e","popoutLink","target","preventDefault","videoPlayer","window","open","opener","location","href","clickedLink","classList","contains","iconPromise","getDOMNode","displayException","processSearchSubmission","parentNode","searchInput","registerEventListeners","boundingBox","addEventListener","searchForm","searchButton","setupDatatable","showRecordings","profile_features","indexOf","reject","pendingPromise","Pending","all","yuiInstance","strings","Intl","add","config","tableData","DataTable","width","columns","rowsPerPage","paginatorLocation","render","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as repository from './repository';\nimport {exception as displayException} from 'core/notification';\nimport {get_strings as getStrings} from 'core/str';\nimport {addIconToContainerWithPromise} from 'core/loadingicon';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport * as Str from 'core/str';\nimport Pending from 'core/pending';\n\nconst stringList = [\n    'view_recording_yui_first',\n    'view_recording_yui_prev',\n    'view_recording_yui_next',\n    'view_recording_yui_last',\n    'view_recording_yui_page',\n    'view_recording_yui_go',\n    'view_recording_yui_rows',\n    'view_recording_yui_show_all',\n];\n\nconst getStringsForYui = () => {\n    const stringMap = stringList.map(key => {\n        return {\n            key,\n            component: 'bigbluebuttonbn',\n        };\n    });\n\n    return getStrings(stringMap)\n        .then(([first, prev, next, last, goToLabel, goToAction, perPage, showAll]) => {\n            return {\n                first,\n                prev,\n                next,\n                last,\n                goToLabel,\n                goToAction,\n                perPage,\n                showAll,\n            };\n        })\n        .catch();\n};\n\nconst getYuiInstance = lang => new Promise(resolve => {\n    // eslint-disable-next-line\n    YUI({\n        lang,\n    }).use('intl', 'datatable', 'datatable-sort', 'datatable-paginator', 'datatype-number', Y => {\n        resolve(Y);\n    });\n});\n\n/**\n * Format the supplied date per the specified locale.\n *\n * @param   {string} locale\n * @param   {array} dateList\n * @returns {array}\n */\nconst formatDates = (locale, dateList) => dateList.map(row => {\n    const date = new Date(row.date);\n    row.date = date.toLocaleDateString(locale, {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    });\n\n    return row;\n});\n\n/**\n * Format response data for the table.\n *\n * @param   {string} response JSON-encoded table data\n * @returns {array}\n */\nconst getFormattedData = response => {\n    const recordingData = response.tabledata;\n    const rowData = JSON.parse(recordingData.data);\n\n    return formatDates(recordingData.locale, rowData);\n};\n\nconst getTableNode = tableSelector => document.querySelector(tableSelector);\n\nconst fetchRecordingData = tableSelector => {\n    const tableNode = getTableNode(tableSelector);\n\n    return repository.fetchRecordings(\n        tableNode.dataset.bbbid,\n        tableNode.dataset.groupId,\n        tableNode.dataset.removeImportedId,\n        tableNode.dataset.tools\n    );\n};\n\n/**\n * Functions to manage the data table.\n *\n * @typedef dataTableFunctions\n * @property callable refreshTableData\n * @property callable filterByText\n * @property callable registerEventListeners\n */\n\n/**\n * Fetch the data table functinos for the specified table.\n *\n * @param {String} tableId in which we will display the table\n * @param {String} searchFormId The Id of the relate.\n * @param {Object} dataTable\n * @returns {dataTable}\n * @private\n */\nconst getDataTableFunctions = (tableId, searchFormId, dataTable) => {\n    const tableNode = getTableNode(tableId);\n    const bbbid = tableNode.dataset.bbbid;\n\n    const updateTableFromResponse = response => {\n        if (!response || !response.status) {\n            // There was no output at all.\n            return;\n        }\n\n        dataTable.get('data').reset(getFormattedData(response));\n        dataTable.set(\n            'currentData',\n            dataTable.get('data')\n        );\n\n        const currentFilter = dataTable.get('currentFilter');\n        if (currentFilter) {\n            filterByText(currentFilter);\n        }\n    };\n\n    const refreshTableData = () => fetchRecordingData(tableId).then(updateTableFromResponse);\n\n    const filterByText = value => {\n        const dataModel = dataTable.get('currentData');\n        dataTable.set('currentFilter', value);\n\n        const escapedRegex = value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n        const rsearch = new RegExp(`<span>.*?${escapedRegex}.*?</span>`, 'i');\n\n        dataTable.set('data', dataModel.filter({asList: true}, item => {\n            const name = item.get('recording');\n            if (name && rsearch.test(name)) {\n                return true;\n            }\n\n            const description = item.get('description');\n            return description && rsearch.test(description);\n        }));\n    };\n\n    const requestAction = (element) => {\n        const getDataFromAction = (element, dataType) => {\n            const dataElement = element.closest(`[data-${dataType}]`);\n            if (dataElement) {\n                return dataElement.dataset[dataType];\n            }\n\n            return null;\n        };\n\n        const elementData = element.dataset;\n        const payload = {\n            bigbluebuttonbnid: bbbid,\n            recordingid: getDataFromAction(element, 'recordingid'),\n            additionaloptions: getDataFromAction(element, 'additionaloptions'),\n            action: elementData.action,\n        };\n        // Slight change for import, the bigbluebuttonid is the bbb origin id.\n        if (elementData.action === 'import') {\n            payload.bigbluebuttonbnid = getDataFromAction(element, 'bboriginid');\n        }\n        if (element.dataset.requireConfirmation === \"1\") {\n            // Create the confirmation dialogue.\n            return new Promise((resolve) =>\n                ModalFactory.create({\n                    title: Str.get_string('confirm'),\n                    body: recordingConfirmationMessage(payload),\n                    type: ModalFactory.types.SAVE_CANCEL\n                }).then(async(modal) => {\n                    modal.setSaveButtonText(await Str.get_string('ok', 'moodle'));\n\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, () => {\n                        resolve(true);\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, () => {\n                        // Destroy when hidden.\n                        modal.destroy();\n                        resolve(false);\n                    });\n\n                    modal.show();\n\n                    return modal;\n                }).catch(Notification.exception)\n            ).then((proceed) =>\n                proceed ? repository.updateRecording(payload) : () => null\n            );\n        } else {\n            return repository.updateRecording(payload);\n        }\n    };\n\n    const recordingConfirmationMessage = async(data) => {\n\n        const playbackElement = document.querySelector(`#playbacks-${data.recordingid}`);\n        const recordingType = await Str.get_string(\n            playbackElement.dataset.imported === 'true' ? 'view_recording_link' : 'view_recording',\n            'bigbluebuttonbn'\n        );\n\n        const confirmation = await Str.get_string(`view_recording_${data.action}_confirmation`, 'bigbluebuttonbn', recordingType);\n\n        if (data.action === 'import') {\n            return confirmation;\n        }\n\n        // If it has associated links imported in a different course/activity, show that in confirmation dialog.\n        const associatedLinkCount = document.querySelector(`a#recording-${data.action}-${data.recordingid}`)?.dataset?.links;\n        if (!associatedLinkCount || associatedLinkCount == 0) {\n            return confirmation;\n        }\n\n        const confirmationWarning = await Str.get_string(\n            associatedLinkCount === 1\n                ? `view_recording_${data.action}_confirmation_warning_p`\n                : `view_recording_${data.action}_confirmation_warning_s`,\n            'bigbluebuttonbn',\n            associatedLinkCount\n        );\n\n        return confirmationWarning + '\\n\\n' + confirmation;\n    };\n\n    /**\n     * Process an action event.\n     *\n     * @param   {Event} e\n     */\n    const processAction = e => {\n        const popoutLink = e.target.closest('[data-action=\"play\"]');\n        if (popoutLink) {\n            e.preventDefault();\n\n            const videoPlayer = window.open('', '_blank');\n            videoPlayer.opener = null;\n            videoPlayer.location.href = popoutLink.href;\n\n            // TODO repository.viewRecording(args); .\n\n            return;\n        }\n\n        // Fetch any clicked anchor.\n        const clickedLink = e.target.closest('a[data-action]');\n        if (clickedLink && !clickedLink.classList.contains('disabled')) {\n            e.preventDefault();\n\n            // Create a spinning icon on the table.\n            const iconPromise = addIconToContainerWithPromise(dataTable.get('boundingBox').getDOMNode());\n\n            requestAction(clickedLink)\n                .then(refreshTableData)\n                .catch(displayException)\n                .then(iconPromise.resolve)\n                .catch();\n        }\n    };\n\n    const processSearchSubmission = e => {\n        // Prevent the default action.\n        e.preventDefault();\n        const parentNode = e.target.closest('div[role=search]');\n        const searchInput = parentNode.querySelector('input[name=search]');\n        filterByText(searchInput.value);\n    };\n\n    const registerEventListeners = () => {\n        // Add event listeners to the table boundingBox.\n        const boundingBox = dataTable.get('boundingBox').getDOMNode();\n        boundingBox.addEventListener('click', processAction);\n\n        // Setup the search from handlers.\n        const searchForm = document.querySelector(searchFormId);\n        if (searchForm) {\n            const searchButton = document.querySelector(searchFormId + ' button');\n            searchButton.addEventListener('click', processSearchSubmission);\n        }\n    };\n\n    return {\n        filterByText,\n        refreshTableData,\n        registerEventListeners,\n    };\n};\n\n/**\n * Setup the data table for the specified BBB instance.\n *\n * @param {String} tableId in which we will display the table\n * @param {String} searchFormId The Id of the relate.\n * @param   {object} response The response from the data request\n * @returns {Promise}\n */\nconst setupDatatable = (tableId, searchFormId, response) => {\n    if (!response) {\n        return Promise.resolve();\n    }\n\n    if (!response.status) {\n        // Something failed. Continue to show the plain output.\n        return Promise.resolve();\n    }\n\n    const recordingData = response.tabledata;\n\n    let showRecordings = recordingData.profile_features.indexOf('all') !== -1;\n    showRecordings = showRecordings || recordingData.profile_features.indexOf('showrecordings') !== -1;\n    if (!showRecordings) {\n        // TODO: This should be handled by the web service.\n        // This user is not allowed to view recordings.\n        return Promise.reject();\n    }\n\n    const pendingPromise = new Pending('mod_bigbluebuttonbn/recordings/setupDatatable');\n    return Promise.all([getYuiInstance(recordingData.locale), getStringsForYui()])\n        .then(([yuiInstance, strings]) => {\n            // Add the fetched strings to the YUI Instance.\n            yuiInstance.Intl.add('datatable-paginator', yuiInstance.config.lang, {...strings});\n\n            return yuiInstance;\n        })\n        .then(yuiInstance => {\n            const tableData = getFormattedData(response);\n\n            const dataTable = new yuiInstance.DataTable({\n                width: \"1195px\",\n                columns: recordingData.columns,\n                data: tableData,\n                rowsPerPage: 10,\n                paginatorLocation: ['header', 'footer']\n            });\n            dataTable.set('currentData', dataTable.get('data'));\n            dataTable.set('currentFilter', '');\n\n            return dataTable;\n        })\n        .then(dataTable => {\n            dataTable.render(tableId);\n            const {registerEventListeners} = getDataTableFunctions(\n                tableId,\n                searchFormId,\n                dataTable);\n            registerEventListeners();\n\n            return dataTable;\n        })\n        .then(dataTable => {\n            pendingPromise.resolve();\n            return dataTable;\n        });\n};\n\n/**\n * Initialise recordings code.\n *\n * @method init\n * @param {String} tableId in which we will display the table\n * @param {String} searchFormId The Id of the relate.\n */\nexport const init = (tableId, searchFormId) => {\n    fetchRecordingData(tableId)\n        .then(response => setupDatatable(tableId, searchFormId, response))\n        .catch(displayException);\n};\n"],"file":"recordings.min.js"}