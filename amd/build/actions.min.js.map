{"version":3,"sources":["../src/actions.js"],"names":["confirmedPromise","title","question","saveLabel","Promise","resolve","registerEventListeners","document","addEventListener","e","actionButton","target","closest","preventDefault","bbbId","dataset","meetingId","then","catch","displayException","listening","init"],"mappings":"8MAuBMA,CAAAA,CAAgB,CAAG,SAACC,CAAD,CAAQC,CAAR,CAAkBC,CAAlB,QAAgC,IAAIC,CAAAA,OAAJ,CAAY,SAAAC,CAAO,CAAI,CAC5E,iBAAWJ,CAAX,CAAkBC,CAAlB,CAA4BC,CAA5B,CAAuCE,CAAvC,CACH,CAFwD,CAAhC,C,CAInBC,CAAsB,CAAG,UAAM,CACjCC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmC,SAAAC,CAAC,CAAI,CACpC,GAAMC,CAAAA,CAAY,CAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,sCAAjB,CAArB,CACA,GAAI,CAACF,CAAL,CAAmB,CACf,MACH,CAEDD,CAAC,CAACI,cAAF,GANoC,GAQ9BC,CAAAA,CAAK,CAAGJ,CAAY,CAACK,OAAb,CAAqBD,KARC,CAS9BE,CAAS,CAAGN,CAAY,CAACK,OAAb,CAAqBC,SATH,CAWpChB,CAAgB,CACZ,iBAAU,2BAAV,CAAuC,qBAAvC,CADY,CAEZ,iBAAU,qBAAV,CAAiC,qBAAjC,CAFY,CAGZ,iBAAU,KAAV,CAAiB,QAAjB,CAHY,CAAhB,CAKCiB,IALD,CAKM,iBAAM,iBAAkBH,CAAlB,CAAyBE,CAAzB,CAAN,CALN,EAMCC,IAND,CAMM,UAAM,CACR,yBAAmBH,CAAnB,CAA0BE,CAA1B,CAGH,CAVD,EAWCE,KAXD,CAWOC,WAXP,CAYH,CAvBD,CAwBH,C,CAEGC,CAAS,G,CACb,GAAI,CAACA,CAAL,CAAgB,CACZd,CAAsB,GACtBc,CAAS,GACZ,C,OAGmB,QAAPC,CAAAA,IAAO,EAAM,CAEzB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {endMeeting as requestEndMeeting} from './repository';\nimport {\n    exception as displayException,\n    saveCancel,\n} from 'core/notification';\nimport {notifySessionEnded} from './events';\nimport {get_string as getString} from 'core/str';\n\nconst confirmedPromise = (title, question, saveLabel) => new Promise(resolve => {\n    saveCancel(title, question, saveLabel, resolve);\n});\n\nconst registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const actionButton = e.target.closest('.bbb-btn-action[data-action=\"end\"]');\n        if (!actionButton) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const bbbId = actionButton.dataset.bbbId;\n        const meetingId = actionButton.dataset.meetingId;\n\n        confirmedPromise(\n            getString('end_session_confirm_title', 'mod_bigbluebuttonbn'),\n            getString('end_session_confirm', 'mod_bigbluebuttonbn'),\n            getString('yes', 'moodle')\n        )\n        .then(() => requestEndMeeting(bbbId, meetingId))\n        .then(() => {\n            notifySessionEnded(bbbId, meetingId);\n\n            return;\n        })\n        .catch(displayException);\n    });\n};\n\nlet listening = false;\nif (!listening) {\n    registerEventListeners();\n    listening = true;\n}\n\n// Note: This call can be removed from Moodle 3.7 onwards.\nexport const init = () => {\n    return;\n};\n"],"file":"actions.min.js"}