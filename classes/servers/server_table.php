<?php
/**
 * This script is owned by CBlue SPRL, please contact CBlue regarding any licences issues.
 *
 * @date :       30/10/2020
 * @author:      rlemaire@cblue.be
 * @copyright:   CBlue SPRL, 2020
 */

namespace mod_bigbluebuttonbn\servers;

use coding_exception;
use flexible_table;
use mod_bigbluebuttonbn\server;
use moodle_exception;

class server_table extends flexible_table
{
    /**
     * @var int Autogenerated id.
     */
    private static $autoid = 0;

    /**
     * Constructor
     *
     * @param string|null $id to be used by the table, autogenerated if null.
     * @throws coding_exception
     */
    public function __construct($id = null)
    {
        global $PAGE;

        $id = (is_null($id) ? self::$autoid++ : $id);
        parent::__construct('bbbservers' . $id);

        $this->define_baseurl($PAGE->url);
        $this->set_attribute('class', 'generaltable admintable');

        // Column definition.
        $this->define_columns(
            [
                'name',
                'url',
                'secret',
                'weight',
                'enabled',
                'actions',
            ]
        );

        $this->define_headers(
            [
                get_string('server_name', 'bigbluebuttonbn'),
                get_string('server_url', 'bigbluebuttonbn'),
                get_string('server_secret', 'bigbluebuttonbn'),
                get_string('server_weight', 'bigbluebuttonbn'),
                get_string('server_enabled', 'bigbluebuttonbn'),
                get_string('actions'),
            ]
        );

        $this->setup();
    }

    /**
     * Sets the data of the table.
     *
     * @param array $records
     */
    public function display(array $records)
    {
        foreach ($records as $record) {
            $this->add_data_keyed($this->format_row($record));
        }

        $this->finish_output();
    }

    /**
     * Display name column.
     *
     * @param server $data Template for this row.
     * @return string
     * @throws moodle_exception
     * @throws coding_exception
     */
    protected function col_name(server $data): string
    {
        return \html_writer::link(
            new \moodle_url(
                controller::get_base_url(), [
                    'id' => $data->get('id'),
                    'action' => controller::ACTION_EDIT,
                ]
            ),
            $data->get('name')
        );
    }

    /**
     * Display url column.
     *
     * @param server $data Template for this row.
     * @return string
     * @throws coding_exception
     */
    protected function col_url(server $data): string
    {
        return $data->get('url');
    }

    /**
     * Display url column.
     *
     * @param server $data Template for this row.
     * @return string
     * @throws coding_exception
     */
    protected function col_secret(server $data): string
    {
        return $data->get('secret');
    }

    /**
     * Display url column.
     *
     * @param server $data Template for this row.
     * @return string
     * @throws coding_exception
     */
    protected function col_weight(server $data): string
    {
        return $data->get('weight');
    }

    /**
     * Display enabled column.
     *
     * @param server $data Template for this row.
     * @return string
     * @throws coding_exception
     */
    protected function col_enabled(server $data): string
    {
        return empty($data->get('enabled')) ? get_string('no') : get_string('yes');
    }

    /**
     * Display actions column.
     *
     * @param server $data
     * @return string
     * @throws coding_exception
     * @throws moodle_exception
     */
    protected function col_actions(server $data): string
    {
        global $OUTPUT;

        $actions = [];

        $title = get_string('edit');
        $actions[] = $OUTPUT->action_icon(
            new \moodle_url(controller::get_base_url(), ['id' => $data->get('id'), 'action' => controller::ACTION_EDIT]),
            new \pix_icon('t/edit', $title, 'moodle', ['title' => $title])
        );

        $title = get_string('delete');

        $delete_confirm = get_string('server_confirm_delete', 'bigbluebuttonbn', ['name' => $data->get('name')]);
        $delete_confirm = str_replace("'", "\'", $delete_confirm);

        $actions[] = $OUTPUT->action_icon(
            new \moodle_url(controller::get_base_url(), ['id' => $data->get('id'), 'action' => controller::ACTION_DELETE, 'sesskey' => sesskey()]),
            new \pix_icon('t/delete', $title, 'moodle', ['title' => $title]),
            null,
            ['data-action' => 'delete', 'data-id' => $data->get('id'), 'onclick' => "javascript:return confirm('" . $delete_confirm . "')"]
        );

        return implode('&nbsp;', $actions);
    }
}
